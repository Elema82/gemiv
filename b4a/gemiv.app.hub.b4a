Build1=gemiv,b4a.gemiv.app.hub
File1=gemivdb.db
File2=gemivMain.bal
FileGroup1=Default Group
FileGroup2=Default Group
Group=Default Group
Library1=core
Library2=phone
Library3=network
Library4=tts
Library5=dbutils
Library6=runtimepermissions
Library7=javaobject
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="28"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.DarkTheme)~\n~'End of default text.~\n~
Module1=GemivDBManager
Module2=GemivGlobals
Module3=GemivSpeechReconigtion
Module4=GemivTTS
Module5=GemivUdpComunication
Module6=Starter
NumberOfFiles=2
NumberOfLibraries=7
NumberOfModules=6
Version=9.801
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Gemiv
	#VersionCode: 1
	#VersionName: Version 1
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: portrait
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: False
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Dim voiceRec 		As GemivSpeechReconigtion
	Dim udpCom			As GemivUdpComunication
	Dim dbManager		As GemivDBManager
	Dim runtimeAdmin	As RuntimePermissions
	Dim text2Speech		As GemivTTS
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	'These variables can only be accessed from this module.
	Private recText 	As EditText
	Private listen 		As Button
	Private ip 			As EditText
	Private response 	As EditText
	Private mac		 	As EditText
	Private getcommand 	As Button
	Private beginlisten As Button
	Private off 		As Button
	Private on 			As Button
	Private ipSwitch 	As String
	Private adddevice As Button
	Private cleardevices As Button
	Private nombreDispositivo As EditText
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:
	'Activity.LoadLayout("Layout1")
	Activity.LoadLayout("gemivMain")
	If FirstTime Then
		runtimeAdmin.CheckAndRequest(runtimeAdmin.PERMISSION_WRITE_EXTERNAL_STORAGE)
		Wait For Activity_PermissionResult (Permission As String, Result As Boolean)
		voiceRec.Initialize(Null,"Hable por favor")
		udpCom.Initialize(8889,8888,8120)
		text2Speech.Initialize
		dbManager.Initialize("gemiv","gemivdb.db")
	End If
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Sub procesarMensaje
	Wait For (voiceRec.RecognizeVoice) Complete (Result As String)
	recText.Text = Result
	Dim sTTS1 As JavaObject = text2Speech.getTextToSpeech
	Dim pregunta As String = GemivGlobals.getTextToSpeech(Result)
	Log(pregunta)
	If Not(pregunta = "") Then
		text2Speech.speak(pregunta,True)
		Do While (sTTS1.RunMethod("isSpeaking", Null))
			Sleep(10)
		Loop
		pregunta=""
		voiceRec.listenSpeech
		procesarMensaje
	Else
		Log(GemivGlobals.comando)
		Log(GemivGlobals.habitacion)
		Log(GemivGlobals.periferico)
		udpCom.sendBroadcastUdp(GemivGlobals.comando.ToLowerCase&"|"&GemivGlobals.habitacion.ToLowerCase&"|"&GemivGlobals.periferico.ToLowerCase)
		text2Speech.speak("Comando Ejecutado: "&GemivGlobals.comando.ToLowerCase&" "&GemivGlobals.periferico.ToLowerCase&" de "&GemivGlobals.habitacion.ToLowerCase, True)
		GemivGlobals.comando=""
		GemivGlobals.habitacion=""
		GemivGlobals.periferico=""
	End If
End Sub

Sub listen_Click
	voiceRec.listenSpeech
	procesarMensaje
End Sub


Sub getcommand_Click
	udpCom.sendBroadcastUdp("GETCOMMAND")
End Sub

Sub beginlisten_Click
	udpCom.sendDirectUdp("BEGINLISTEN",ipSwitch,0)
End Sub

Sub off_Click
	udpCom.sendDirectUdp("apagar",ipSwitch,0)
End Sub

Sub on_Click
	udpCom.sendDirectUdp("prender",ipSwitch,0)
End Sub

Sub adddevice_Click
	Dim qry As String = GemivGlobals.qryInsertDevices(nombreDispositivo.Text,"192.168.0.67","00:00:00:00:00:00",1)
	If dbManager.ExecNonQueryStatment(qry) Then
		ToastMessageShow ("Dispositivo Guardado", True)
	Else
		ToastMessageShow ("Error", True)
	End If
	
End Sub

Sub cleardevices_Click
	Dim qry As String = GemivGlobals.qryDeleteDevices(nombreDispositivo.Text)
	If dbManager.ExecNonQueryStatment(qry)  Then
		ToastMessageShow ("Dispositivo Borrado", True)
	Else
		ToastMessageShow ("Error", True)
	End If
End Sub

Public Sub UDP_PacketArrived (dg As UDPPacket)
	Dim dataString As String = BytesToString(dg.Data, dg.Offset, dg.Length, "UTF8")
	Dim ipString   As String= dg.HostAddress
	udpCom.setMessageDatagram(dataString,ipString)
	Log("Data" & dataString)
	ipSwitch         	   = ipString
	Dim dataArray() As String
	dataArray = Regex.Split("\: ",dataString)
	If dataArray(0)="MAC" Then
		mac.Text	 = dataArray(1)
	End If
	If dataArray(0)="IP" Then
		ip.Text		 = dataArray(1)
	End If
End Sub
